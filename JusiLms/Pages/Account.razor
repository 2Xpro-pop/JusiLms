@page "/user/{Id:guid}"
@using Microsoft.AspNetCore.Identity;

@inject IUsersApi UserService
@inject ICategoryApi CategoryService
@inject ILessonsApi LessonsService
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject IHomeWorksApi HomeWorksService
@inject NavigationManager NavigationManager

@if (_user == null) return;

<div class="row">

    <div class="col-12 col-lg-4 px-4 my-5 border-end-2">

        @if (_loading)
        {
            <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
        }
        else
        {
            <MudImage Height="182" Width="182" Src=@_user.Avatar ObjectFit="ObjectFit.Cover" Class="mb-3 radius-10 " />
            <MudText Typo="Typo.h4" Class="avante dark-text">@_user.FullName</MudText>
            <MudText Typo="Typo.h5" Class="avante dark-text large-bottom">@_user.Insta</MudText>

            <MudText Typo="Typo.h6" Class="avante grey-text">Почта:</MudText>
            <MudText Typo="Typo.h6" Class="avante grey-text mb-3 mb-md-5">@_user.Email</MudText>

            <MudText Typo="Typo.h6" Class="avante grey-text">Ник в тг:</MudText>
            <MudText Typo="Typo.h6" Class="avante grey-text mb-3 mb-md-5">@_user.Tg</MudText>

            <MudText Typo="Typo.h6" Class="avante grey-text">Номер телефона:</MudText>
            <MudText Typo="Typo.h6" Class="avante grey-text mb-3 mb-md-5">@_user.PhoneNumber</MudText>

            <MudText Typo="Typo.h6" Class="avante grey-text">номер W/A::</MudText>
            <MudText Typo="Typo.h6" Class="avante grey-text mb-3 mb-md-5">@_user.Wa</MudText>
        }


    </div>

    <div class="col-12 col-lg-7 px-4 my-5">

        <div class="header-container avante dark-card px-5 py-1 mb-4 text-white">Выполнение дзшки</div>

        @if (_loading)
        {
            <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
        }
        else
        {
            var iter = 0;
            foreach (var hw in _homeWorks)
            {
                <div class="row w-100 justify-content-center align-items-stretch py-4">
                    <div class="col-2 h-100 d-flex align-items-stretch justify-content-center p-1">
                        <div class="bg-white p-1 py-3 avante radius h-100 w-100">
                            <div class="text-center h4 m-0">
                                @(++iter)
                            </div>
                        </div>
                    </div>

                    <div Class="col-10 d-flex" >
                        <div class="px-2 w-100 py-1 avante dark-card grey-card cursor-pointer">
                            <MudText Typo="Typo.h6" Class="avante">@hw.Details</MudText>
                        </div>
                    </div>
                </div>
            }
        }

    </div>

</div>

@code {

    [Parameter]
    public Guid Id { get; set; }

    private User? _user;
    private List<HomeWork> _homeWorks = new();

    private MudSelect<HomeWork> _select;

    private bool _loading;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _user = await UserService.GetUserById(Id);

        if (_user == null) return;


        IEnumerable<HomeWork> exist = await HomeWorksService.GetUserHomeworks(Guid.Parse(_user.Id)) ?? Array.Empty<HomeWork>();

        _homeWorks = new(exist);


        _loading = false;
    }

    private async Task Update()
    {
        _loading = true;

        IEnumerable<HomeWork> exist = await HomeWorksService.GetUserHomeworks(Id) ?? Array.Empty<HomeWork>();

        _homeWorks = new(exist);

        _loading = false;
    }
}