@using System.Text.RegularExpressions;
<MudDialog Class="bg-white">
    <DialogContent>
        <MudForm @ref=form>
            <MudTextField @bind-Value=@Password Label="Пароль" Validation="@(new Func<string, string>(x => PasswordStrength(x).FirstOrDefault()))" />
        </MudForm>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Отмена</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Обновить</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private readonly string _specials = "#$@!%^&*()";

    private MudForm form;

    protected override async Task OnInitializedAsync()
    {
    }

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public string Password
    {
        get; set;
    }

    private async Task Submit()
    {
        await form.Validate();
        if (!form.IsValid)
        {
            return;
        }
        MudDialog.Close(DialogResult.Ok(Password));
    }
    void Cancel() => MudDialog.Cancel();

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Пароль обязателен!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Пароль должен содержать минимум 8 символов";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Пароль должен содержать минимум 1 заглавную букву";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Пароль должен содержать минимум 1 маленькую букву";
        if (!pw.Any(x => _specials.Contains(x)))
            yield return $"Пароль должен содержать минимум один из этих символов {_specials}";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Пароль должен содержать минимум 1 цифру";
    }
}
